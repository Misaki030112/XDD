<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
    <!--
        context:生成一组对象的环境
        id:必选，上下文id，用于在生成错误时提示
        defaultModelType:指定生成对象的样式
        特别说明 我的前面三个都不管用,不知道为啥
            1，conditional：类似hierarchical；
            2，flat：所有内容（主键，blob）等全部生成在一个对象中；
            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
        targetRuntime:
            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
        introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="mysqlDbTbale"    targetRuntime="MyBatis3">

        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
       一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
        -->
        <property name="autoDelimitKeywords" value="false"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- Lombok插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LombokPlugin">
            <!-- @Data 默认开启,同时插件会对子类自动附加@EqualsAndHashCode(callSuper = true)，@ToString(callSuper = true) -->
            <property name="@Data" value="true"/>
            <!-- @Builder 必须在 Lombok 版本 >= 1.18.2 的情况下开启，对存在继承关系的类自动替换成@SuperBuilder -->
            <property name="@Builder" value="false"/>
            <!-- @NoArgsConstructor 和 @AllArgsConstructor 使用规则和Lombok一致 -->
            <property name="@AllArgsConstructor" value="false"/>
            <property name="@NoArgsConstructor" value="false"/>
            <!-- @Getter、@Setter、@Accessors 等使用规则参见官方文档 -->
            <property name="@Accessors(chain = true)" value="false"/>
            <!-- 临时解决IDEA工具对@SuperBuilder的不支持问题，开启后(默认未开启)插件在遇到@SuperBuilder注解时会调用ModelBuilderPlugin来生成相应的builder代码 -->
            <property name="supportSuperBuilderForIdea" value="false"/>
        </plugin>

        <!--mybatis分页插件-->
        <plugin type="com.itfsw.mybatis.generator.plugins.LimitPlugin">
            <!-- 通过配置startPage影响Example中的page方法开始分页的页码，默认分页从0开始 -->
            <property name="startPage" value="0"/>
        </plugin>
        <!--序列化插件-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />

        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库链接地址账号密码-->
        <!--nullCatalogMeansCurrent=true 以前该属性默认为false 需要修改成true 只在逆向工程中使用，正常连接不适用
        如果逆向工程不添加该属性，则会扫描该数据库id下所有的数据库  即使给定数据库名称也不好用。-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://alndadudu.mysql.rds.aliyuncs.com:3306/weakee_xcx_test?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;serverTimezone=GMT%2B8&amp;nullCatalogMeansCurrent=true&amp;useSSL=false"
                        userId="dudu"
                        password="dudu_weakee123" >
            <property name="useInformationSchema" value="true"/>
        </jdbcConnection>

        <!-- java类型处理器
        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
        注意一点，默认会先尝试使用Integer，Long，Integer等来对应DECIMAL和 NUMERIC数据类型；
        -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <!--
                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
                false：默认,
                    scale>0;length>18：使用BigDecimal;
                    scale=0;length[10,18]：使用Long；
                    scale=0;length[5,9]：使用Integer；
                    scale=0;length<5：使用Integer；
             -->
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- java模型创建器，是必须要的元素
               负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
               targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
               targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
            -->
        <javaModelGenerator targetPackage="com.hznu.xdd.pojo" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
            <!-- 设置一个根对象，
            如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项
            注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：
                1，属性名相同，类型相同，有相同的getter/setter方法；
             -->
        </sqlMapGenerator>
        <!--生成Dao类存放位置-->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.hznu.xdd.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

<!--        <table  tableName="admin" domainObjectName="AdminDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="AlembicVersion" domainObjectName="AlembicVersionDO">-->
<!--            <generatedKey column="version_num" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="box" domainObjectName="BoxDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="box_record" domainObjectName="BoxRecordDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="chat_message" domainObjectName="ChatMessageDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="collect_log" domainObjectName="CollectLogDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="config_center" domainObjectName="ConfigCenterDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="fans_log" domainObjectName="FansLogDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="news" domainObjectName="NewDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="notice" domainObjectName="NoticeDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="operate_log" domainObjectName="OperateLogDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="reply" domainObjectName="ReplyDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="slide" domainObjectName="SlideDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="tab" domainObjectName="TabDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="ugc" domainObjectName="UgcDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="ugc_join" domainObjectName="UgcJoinDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="user" domainObjectName="UserDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="report" domainObjectName="reportDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="verify_email" domainObjectName="verify_emailDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="verify_image" domainObjectName="verify_imageDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="verify_method" domainObjectName="verify_methodDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>        -->

<!--        <table  tableName="question" domainObjectName="questionDO">-->
<!--            <property name="useActualColumnNames" value="true" />-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table> -->

        <table  tableName="answer" domainObjectName="answerDO">
            <property name="useActualColumnNames" value="true" />
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
        </table>

<!--        <table  tableName="user_report" domainObjectName="UserReportDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->

<!--        <table  tableName="vote_log" domainObjectName="VoteLogDO">-->
<!--            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
<!--        </table>-->






    </context>
</generatorConfiguration>